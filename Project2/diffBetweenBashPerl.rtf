{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Consolas;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red36\green38\blue41;\red235\green236\blue237;\red104\green26\blue29;
\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 new line in string is by default in Bash.\
echo \'93\\n\'94 prints \\n literally\
printf \'93\\n\\n\\n\'94 gives 3 new lines.\
So printf has more functions.\
\
in Bash,\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
names=\cf4 `cat data.txt`\cf2 \
echo $names\

\f2 \cb5 results in word-splicing. So make sure to put quotes around the variable.}